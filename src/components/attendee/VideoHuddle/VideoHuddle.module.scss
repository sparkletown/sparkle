@use "scss/attendee/theme";
@use "scss/attendee/space";
@use "scss/attendee/effects/sparkle";
@use "scss/attendee/effects/rounded";
@use "scss/attendee/layout";
@use "scss/attendee/breakpoint";

$-control-size: 32px;
$control-button-width: 80px;

.VideoHuddle {
  position: relative;
  overflow: hidden;
  display: flex;
  flex-direction: row-reverse;
  padding: space.gap(1);
  @include sparkle.panel--normal;

  @media (min-width: breakpoint.$md) {
    grid-column: 1 / 3;
    width: 100%;
    flex-shrink: 0;
    bottom: space.empty(1);
  }

  height: layout.$h-video-chat;
  min-height: layout.$h-video-chat;
  border-top: 1px solid theme.$sparkle--border;
  border-bottom: 1px solid theme.$sparkle--border;
}

.huddleFixed {
  position: fixed;
  bottom: 0;
  width: 100%;
}

.VideoHuddleControls {
  @include sparkle.panel--normal;
  width: $control-button-width;
  position: relative;
  margin-top: space.gap(-1);
  display: flex;
  flex-direction: column;
  justify-self: start;
  border-left: 1px solid theme.$sparkle--border;

  > span {
    width: 100%;
    display: flex;
    justify-content: space-evenly;
    padding: space.gap(1);
    align-items: center;
    height: $-control-size;
    opacity: 0.5;
    cursor: pointer;

    &:hover {
      opacity: 1;
    }
  }
}

.VideoHuddleVideos {
  flex-grow: 1;
  overflow-x: scroll;
  overflow-y: hidden;
  display: flex;
  gap: space.gap(1);

  // Pseudoelements are quirky that if there is a standard flex/grid solution we should use it.
  // Currently there is a solution that isn't fully supported in all browsers that we might try in the future.
  // @see https://stackoverflow.com/a/33455342
  // @see https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox#Flex_item_considerations
  &::before,
  &::after {
    content: "";
    flex: 1;
  }
}
