{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": ["@typescript-eslint", "prefer-arrow"],
  "extends": [
    "react-app",
    "eslint:recommended",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:import/typescript",

    "plugin:react/recommended",
    "plugin:react-hooks/recommended"
    // "plugin:@typescript-eslint/recommended", // @debt enable this + fix the issues in a standalone PR
    // "plugin:@typescript-eslint/recommended-requiring-type-checking", // @debt enable this + fix the issues in a standalone PR
  ],
  "rules": {
    "@typescript-eslint/no-redeclare": "warn",
    "@typescript-eslint/no-use-before-define": "warn",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-unused-vars": "error",
    "no-case-declarations": "off",
    "no-prototype-builtins": "off",
    // these base rules can report incorrect errors when using TypeScript, see the corresponding @typescript-eslint versions
    "no-redeclare": "off",
    "no-use-before-define": "off",
    "prefer-arrow/prefer-arrow-functions": [
      "warn",
      {
        "disallowPrototype": true,
        "singleReturnOnly": false,
        "classPropertiesAllowed": false
      }
    ],
    "prefer-arrow-callback": ["error", { "allowNamedFunctions": true }],
    "func-style": ["error", "expression", { "allowArrowFunctions": true }],
    "no-restricted-imports": [
      "error",
      {
        "name": "react-redux",
        "importNames": ["useSelector", "useDispatch"],
        "message": "Import typed version from hooks/{useSelector|useDispatch}"
      },
      {
        "name": "react-redux-firebase",
        "importNames": ["useFirestoreConnect"],
        "message": "Import typed version from hooks/useSparkleFirestoreConnect"
      },
      {
        "name": "firebase",
        "message": "Use firebase/app instead"
      },
      {
        "name": "lodash",
        "importNames": ["default"],
        "message": "Avoid importing all of lodash; import only what you need"
      },
      {
        "name": "mixpanel-browser",
        "message": "Import safe version from hooks/useMixpanel instead"
      }
    ],
    "react/prop-types": "off",
    "react/display-name": "warn",
    // @see https://github.com/facebook/react/tree/master/packages/eslint-plugin-react-hooks#advanced-configuration
    "react-hooks/exhaustive-deps": [
      "warn",
      {
        "additionalHooks": "(useAsync)"
      }
    ]
  },
  "globals": {
    "React": true,
    "JSX": true
  }
}
